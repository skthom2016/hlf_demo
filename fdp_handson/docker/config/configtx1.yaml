#   CAPABILITIES
Capabilities:
  Application: &ApplicationCapabilities
    V1_3: true
  Orderer: &OrdererCapabilities
    V1_1: true
  Channel: &ChannelCapabilities
    V1_3: true

# ORGANIZATIONS
Organizations:
  - &Orderer
    Name: Orderer
    ID: OrdererMSP
    MSPDir: ./crypto-config/ordererOrganizations/oem.com/msp
    Policies: &OrdererPolicies
      Readers:
          Type: Signature
          Rule: "OR('OrdererMSP.member')"
      Writers:
          Type: Signature
          Rule: "OR('OrdererMSP.member')"
      Admins:
          Type: Signature
          Rule: "OR('OrdererMSP.admin')"

  - &Oem
    Name: Oem
    ID: OemMSP
    MSPDir: ./crypto-config/peerOrganizations/oem.com/msp
    Policies: &OemPolicies
      Readers:
          Type: Signature
          Rule: "OR('OemMSP.member')"
      Writers:
          Type: Signature
          Rule: "OR('OemMSP.member')"
      Admins:
          Type: Signature
          Rule: "OR('OemMSP.admin')"
    AnchorPeers:
      - Host: peer1.oem.com
        Port: 7051
    

  - &Dealer
    Name: Dealer
    ID: DealerMSP
    MSPDir: ./crypto-config/peerOrganizations/dealer.com/msp
    Policies: &DealerPolicies
      Readers:
          Type: Signature
          Rule: "OR('DealerMSP.member')"
      Writers:
          Type: Signature
          Rule: "OR('DealerMSP.member')"
      Admins:
          Type: Signature
          Rule: "OR('DealerMSP.admin')"
    AnchorPeers:
      - Host: peer1.dealer.com
        Port: 7051
      

  
# ORDERER
Orderer: &OrdererDefaults

  OrdererType: solo

  Addresses:
    - orderer.oem.com:7050

    # Policies for Orderer
  Policies:
    Readers:
        Type: ImplicitMeta
        Rule: "ANY Readers"
    Writers:
        Type: ImplicitMeta
        Rule: "ANY Writers"
    Admins:
        Type: ImplicitMeta  
        Rule: "MAJORITY Admins"

    # BlockValidation specifies what signatures must be included in the block
    # from the orderer for the peer to validate it.
    BlockValidation:
        Type: ImplicitMeta
        Rule: "ANY Writers"

  # Batch Timeout: The amount of time to wait before creating a batch
  BatchTimeout: 2s

  # Batch Size: Controls the number of messages batched into a block
  BatchSize:
    MaxMessageCount: 10
    AbsoluteMaxBytes: 98 MB
    PreferredMaxBytes: 512 KB



  Capabilities:
    <<: *OrdererCapabilities

Application: &ApplicationDefaults

#   ACLs: &ACLsDefault
    
#     # ACL policy for lscc's "getid" function
#     lscc/ChaincodeExists: /Channel/Application/Readers

#     # ACL policy for lscc's "getdepspec" function
#     lscc/GetDeploymentSpec: /Channel/Application/Readers

#     # ACL policy for lscc's "getccdata" function
#     lscc/GetChaincodeData: /Channel/Application/Readers

#     # ACL Policy for lscc's "getchaincodes" function
#     #    lscc/GetInstantiatedChaincodes: /Channel/Application/Readers
#     lscc/GetInstantiatedChaincodes: /Channel/Application/StrictAdminPolicy

#     #---Query System Chaincode (qscc) function to policy mapping for access control---#

#     # ACL policy for qscc's "GetChainInfo" function
#     # qscc/GetChainInfo: /Channel/Application/Readers
#     qscc/GetChainInfo: /Channel/Application/StrictAdminPolicy

#     # ACL policy for qscc's "GetBlockByNumber" function
#     qscc/GetBlockByNumber: /Channel/Application/Readers

#     # ACL policy for qscc's  "GetBlockByHash" function
#     qscc/GetBlockByHash: /Channel/Application/Readers

#     # ACL policy for qscc's "GetTransactionByID" function
#     qscc/GetTransactionByID: /Channel/Application/Readers

#     # ACL policy for qscc's "GetBlockByTxID" function
#     qscc/GetBlockByTxID: /Channel/Application/Readers

#     #---Configuration System Chaincode (cscc) function to policy mapping for access control---#

#     # ACL policy for cscc's "GetConfigBlock" function
#     cscc/GetConfigBlock: /Channel/Application/Readers

#     # ACL policy for cscc's "GetConfigTree" function
#     cscc/GetConfigTree: /Channel/Application/Readers

#     # ACL policy for cscc's "SimulateConfigTreeUpdate" function
#     cscc/SimulateConfigTreeUpdate: /Channel/Application/Readers

#     #---Miscellanesous peer function to policy mapping for access control---#

#     # ACL policy for invoking chaincodes on peer
#     peer/Propose: /Channel/Application/Writers

#     # ACL policy for chaincode to chaincode invocation
#     peer/ChaincodeToChaincode: /Channel/Application/Readers

#     #---Events resource to policy mapping for access control###---#

#     # ACL policy for sending block events
#     event/Block: /Channel/Application/Readers

#     # ACL policy for sending filtered block events
#     event/FilteredBlock: /Channel/Application/Readers

#   # Default policies
  Policies: &ApplicationDefaultPolicies
    Readers:
        Type: ImplicitMeta
        Rule: "ANY Readers"
    Writers:
        Type: ImplicitMeta
        Rule: "ANY Writers"
    Admins:
        Type: ImplicitMeta
        Rule: "MAJORITY Admins"

#     StrictAdminPolicy:
#         Type: ImplicitMeta
#         Rule: "ANY Admins"
 
#   Organizations:

  Capabilities:
    <<: *ApplicationCapabilities
 

#   CHANNEL
Channel: &ChannelDefaults
  Policies:
    Readers:
        Type: ImplicitMeta
        Rule: "ANY Readers"
    Writers:
        Type: ImplicitMeta
        Rule: "ANY Writers"
    Admins:
        Type: ImplicitMeta
        Rule: "ANY Admins"

  Capabilities:

  
#   PROFILES
Profiles:

  LogisticOrdererGenesis:
      <<: *ChannelDefaults
      Orderer:
          <<: *OrdererDefaults
          Organizations:
              - <<: *Orderer


      # Application:
      #       <<: *ApplicationDefaults

      #       Organizations:
      #           - <<: *Acme               
      #           - <<: *Budget

      Consortiums:

        LogisticsConsortium:
            
            Organizations:
                  - <<: *Oem                               
                  - <<: *Dealer
                  
  LogisticsChannel:
    <<: *ChannelDefaults
    Consortium: LogisticsConsortium
        
    Application:
        <<: *ApplicationDefaults
        
        Organizations:
            - <<: *Oem  
            - <<: *Dealer
